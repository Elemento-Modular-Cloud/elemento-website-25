const themes=["theme-light","theme-dark","theme-high-contrast"],DEFAULT_THEME_INDEX=0,DEFAULT_THEME=themes[0],themeIcons=['<svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">\n        <path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41l-1.06-1.06zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z"/>\n    </svg>','<svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor" transform="scale(1, -1) rotate(-10)">\n        <path d="M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z"/>\n    </svg>','<svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">\n        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-3.31 0-6 2.69-6 6s2.69 6 6 6V6z"/>\n    </svg>'];let currentThemeIndex=0;const btnClass=".theme-toggle",themeToggleBtn=document.querySelector(btnClass),body=document.body;function initThemeSwitcher(){if(console.log("Initializing theme switcher"),document.querySelector(btnClass))console.log("Theme switcher already exists");else{console.log("Creating theme switcher element");const e=document.createElement("div");e.className="theme-switcher",e.innerHTML=`\n            <button class="theme-toggle" title="Toggle theme">\n                ${themeIcons[currentThemeIndex]}\n            </button>\n        `;e.querySelector(btnClass).addEventListener("click",toggleTheme),console.log("Theme switcher created and event listener added")}}function toggleTheme(){const e=themes[currentThemeIndex];currentThemeIndex=(currentThemeIndex+1)%themes.length;const t=themes[currentThemeIndex];console.log(`Toggling theme from ${e} to ${t}`,{previousIndex:(currentThemeIndex-1+themes.length)%themes.length,newIndex:currentThemeIndex,themeName:getThemeName(currentThemeIndex)}),body.classList.remove("theme-light","theme-dark","theme-high-contrast"),body.classList.add(t),localStorage.setItem("elemento-theme",t),localStorage.setItem("elemento-theme-index",currentThemeIndex.toString()),console.log(`Theme saved to localStorage: ${t}`),updateThemeIcon(),notifyIframesOfThemeChange(t)}function notifyIframesOfThemeChange(e){document.querySelectorAll("iframe").forEach(t=>{try{t.contentWindow.postMessage({type:"theme-change",theme:e},"*")}catch(e){console.log("Could not notify iframe of theme change:",e)}})}function updateThemeIcon(){const e=document.querySelector(".theme-toggle");e?(e.innerHTML=themeIcons[currentThemeIndex],e.title=`Current theme: ${getThemeName(currentThemeIndex)}`,console.log(`Updated theme icon to: ${getThemeName(currentThemeIndex)}`)):console.log("Warning: Theme toggle button not found")}function getThemeName(e){return["Light","Dark","High Contrast"][e]}function loadSavedTheme(){console.log("Loading saved theme from localStorage");let e=null,t=null;try{e=localStorage.getItem("elemento-theme"),t=localStorage.getItem("elemento-theme-index")}catch(e){console.log("localStorage not available (private navigation?), using defaults")}if(console.log("Saved theme data:",{savedTheme:e,savedIndex:t}),e)body.classList.remove("theme-light","theme-dark","theme-high-contrast"),body.classList.add(e),currentThemeIndex=t?parseInt(t,10):themes.indexOf(e),(currentThemeIndex<0||currentThemeIndex>=themes.length)&&(currentThemeIndex=0),console.log(`Loaded saved theme: ${e} (index: ${currentThemeIndex})`);else{const e=themes.find(e=>body.classList.contains(e));e?(currentThemeIndex=themes.indexOf(e),console.log(`No saved theme found, using existing body class: ${e} (index: ${currentThemeIndex})`)):(body.classList.remove("theme-light","theme-dark","theme-high-contrast"),body.classList.add(DEFAULT_THEME),currentThemeIndex=0,console.log(`No saved theme or existing body class found, using default: ${DEFAULT_THEME} (index: 0)`))}updateThemeIcon(),notifyIframesOfThemeChange(themes[currentThemeIndex])}function initThemeSystem(){console.log("Initializing theme system"),console.log("Configuration:",{themes:themes,DEFAULT_THEME_INDEX:0,DEFAULT_THEME:DEFAULT_THEME,currentThemeIndex:currentThemeIndex}),loadSavedTheme(),initThemeSwitcher(),document.addEventListener("keydown",e=>{(e.ctrlKey||e.metaKey)&&"t"===e.key&&(e.preventDefault(),console.log("Theme toggle triggered via keyboard shortcut (Ctrl/Cmd + T)"),toggleTheme())}),console.log("Theme system initialization complete")}function detectSystemTheme(){console.log("System theme detection disabled - using configured default theme")}window.addEventListener("message",function(e){if("request-theme"===e.data.type){const t=themes[currentThemeIndex];try{e.source.postMessage({type:"theme-change",theme:t},"*")}catch(e){console.log("Could not send theme to iframe:",e)}}}),window.ElementoThemes={toggleTheme:toggleTheme,getCurrentTheme:()=>themes[currentThemeIndex],getCurrentThemeName:()=>getThemeName(currentThemeIndex),getCurrentThemeIndex:()=>currentThemeIndex},document.addEventListener("DOMContentLoaded",()=>{console.log("DOM loaded, initializing theme system"),initThemeSystem(),detectSystemTheme()}),"loading"===document.readyState?console.log("DOM still loading, waiting for DOMContentLoaded event"):(console.log("DOM already loaded, initializing immediately"),initThemeSystem(),detectSystemTheme(),updateThemeIcon());