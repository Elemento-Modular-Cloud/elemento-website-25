class SuccessStoriesCarousel{constructor(t,e){this.container=document.getElementById(t),this.dataUrl=e,this.stories=[],this.currentIndex=0,this.autoplayInterval=null,this.autoplayDelay=8e3,this.autoplayRestartDelay=3e3,this.init()}async init(){try{console.log("üöÄ Initializing Success Stories Carousel..."),await this.loadStories(),console.log(`üìä Loaded ${this.stories.length} success stories`),this.render(),this.startAutoplay(),this.bindEvents(),console.log("‚úÖ Carousel initialized successfully")}catch(t){console.error("‚ùå Error initializing carousel:",t),this.showFallback()}}async loadStories(){const t=await fetch(this.dataUrl);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);this.stories=await t.json()}render(){this.container&&0!==this.stories.length?(console.log("üé® Rendering carousel with",this.stories.length,"stories"),this.container.innerHTML=`\n            <div class="success-stories-carousel">\n                <button class="carousel-btn carousel-prev" aria-label="Previous story">\n                    <i class="fas fa-chevron-left"></i>\n                </button>\n                \n                <div class="carousel" title="Hover to pause autoplay">\n                    <div class="carousel-track">\n                        ${this.stories.map((t,e)=>this.renderStory(t,e)).join("")}\n                    </div>\n                </div>\n                \n                <button class="carousel-btn carousel-next" aria-label="Next story">\n                    <i class="fas fa-chevron-right"></i>\n                </button>\n                \n                <div class="carousel-controls">\n                    <div class="carousel-indicators">\n                        ${this.stories.map((t,e)=>`\n                            <button class="carousel-indicator ${0===e?"active":""}" \n                                    data-index="${e}" \n                                    aria-label="Go to story ${e+1}">\n                            </button>\n                        `).join("")}\n                    </div>\n                </div>\n                \n                <div class="carousel-hint">\n                    <small><i class="fas fa-pause"></i> Hover to pause autoplay</small>\n                </div>\n            </div>\n        `,console.log("üéØ Setting initial active story to index 0"),this.updateActiveStory(0)):console.log("‚ùå Container not found or no stories loaded")}renderStory(t,e){return console.log(`üìù Rendering story for ${t.company} with ${t.results?t.results.length:0} results`),`\n            <div class="carousel-slide ${0===e?"active":""}" data-index="${e}">\n                <div class="story-card">\n                    <div class="story-header">\n                        <div class="company-info">\n                            <img src="${t.logo}" alt="${t.company} logo" class="company-logo" \n                                onload="this.classList.add('loaded')" \n                                onerror="this.style.display='none'; this.nextElementSibling.style.marginLeft='0';">\n                            <div class="company-details">\n                                <h3 class="company-name">${t.company}</h3>\n                                <p class="company-industry">${t.industry}</p>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <blockquote class="story-quote">\n                        <p>&nbsp;&nbsp;${t.quote}</p>\n                        <footer class="story-author">\n                            <strong>${t.author}</strong>\n                            <span class="author-role">${t.role}</span>\n                        </footer>\n                    </blockquote>\n                    \n                    <div class="story-details">\n                        <div class="story-challenge">\n                            <h4>Challenge</h4>\n                            <p>${t.challenge}</p>\n                        </div>\n                        \n                        <div class="story-solution">\n                            <h4>Solution</h4>\n                            <p>${t.solution}</p>\n                        </div>\n                    </div>\n\n                    <div class="story-details">\n                        <div class="story-results">\n                            <h4>Results</h4>\n                            <ul>\n                                ${t.results&&t.results.length>0?t.results.map(t=>`<li>${t}</li>`).join(""):"<li>No results available</li>"}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `}renderStats(t){const e=t.metrics;return Object.entries(e).map(([t,e])=>`\n                <div class="stat-item">\n                    <div class="stat-value">${e}</div>\n                    <div class="stat-label">${this.formatMetricLabel(t)}</div>\n                </div>\n            `).join("")}formatMetricLabel(t){return{cost_savings:"Cost Savings",deployment_time:"Deployment Time",uptime:"Uptime",gpu_availability:"GPU Availability",processing_speed:"Processing Speed",migration_time:"Migration Time",downtime:"Downtime",deployment_speed:"Deployment Speed",reliability:"Reliability",carbon_footprint:"Carbon Reduction",processing_power:"Processing Power",compliance_time:"Compliance Time",security_score:"Security Score",audit_time:"Audit Time"}[t]||t.replace(/_/g," ").replace(/\b\w/g,t=>t.toUpperCase())}updateActiveStory(t){console.log(`üîÑ Updating active story to index ${t}`);const e=this.container.querySelectorAll(".carousel-slide");console.log(`üìÑ Found ${e.length} slides`),e.forEach((e,s)=>{if(s===t){e.classList.add("active"),console.log(`‚úÖ Activated slide ${s}`);const t=e.getBoundingClientRect();console.log(`üìè Slide ${s} dimensions:`,t.width,"x",t.height)}else e.classList.remove("active")});this.container.querySelectorAll(".carousel-indicator").forEach((e,s)=>{e.classList.toggle("active",s===t)}),this.currentIndex=t,console.log(`üìä Current index set to ${t}`)}next(){const t=(this.currentIndex+1)%this.stories.length;this.updateActiveStory(t)}prev(){const t=0===this.currentIndex?this.stories.length-1:this.currentIndex-1;this.updateActiveStory(t)}goTo(t){t>=0&&t<this.stories.length&&this.updateActiveStory(t)}startAutoplay(){console.log("‚ñ∂Ô∏è Starting autoplay"),this.autoplayInterval=setInterval(()=>{console.log(" Autoplay advancing to next story"),this.next()},this.autoplayDelay),this.updateAutoplayStatus(!1)}stopAutoplay(){console.log("‚è∏Ô∏è Stopping autoplay"),this.autoplayInterval&&(clearInterval(this.autoplayInterval),this.autoplayInterval=null),this.updateAutoplayStatus(!0)}updateAutoplayStatus(t){const e=this.container.querySelector(".success-stories-carousel");e&&(t?e.classList.add("autoplay-paused"):e.classList.remove("autoplay-paused"))}delayedStartAutoplay(){console.log("‚è∞ Starting delayed autoplay restart"),setTimeout(()=>{this.startAutoplay()},this.autoplayRestartDelay)}bindEvents(){const t=this.container.querySelector(".carousel-prev"),e=this.container.querySelector(".carousel-next");t&&t.addEventListener("click",()=>{this.stopAutoplay(),this.prev(),this.delayedStartAutoplay()}),e&&e.addEventListener("click",()=>{this.stopAutoplay(),this.next(),this.delayedStartAutoplay()});this.container.querySelectorAll(".carousel-indicator").forEach((t,e)=>{t.addEventListener("click",()=>{this.stopAutoplay(),this.goTo(e),this.delayedStartAutoplay()})});const s=this.container.querySelector(".carousel");s?(console.log("üéØ Setting up hover events for carousel"),s.addEventListener("mouseenter",t=>{console.log("Ô∏è Mouse entered carousel - stopping autoplay",t.target),this.stopAutoplay()}),s.addEventListener("mouseleave",t=>{console.log("üñ±Ô∏è Mouse left carousel - resuming autoplay",t.target),this.startAutoplay()})):console.error("‚ùå Could not find carousel element for hover events"),this.container.addEventListener("mouseenter",t=>{t.target.closest(".carousel")&&(console.log("Ô∏è Mouse entered carousel area - stopping autoplay",t.target),this.stopAutoplay())}),this.container.addEventListener("mouseleave",t=>{t.relatedTarget&&this.container.contains(t.relatedTarget)||(console.log("üñ±Ô∏è Mouse left carousel area - resuming autoplay",t.target),this.startAutoplay())}),document.addEventListener("keydown",t=>{"ArrowLeft"===t.key?(this.stopAutoplay(),this.prev(),this.delayedStartAutoplay()):"ArrowRight"===t.key&&(this.stopAutoplay(),this.next(),this.delayedStartAutoplay())})}showFallback(){this.container&&(console.log("üîÑ Showing fallback content"),this.stories.length>0?this.container.innerHTML=`\n                    <div class="success-stories-fallback">\n                        <h3>Success Stories from Our Customers</h3>\n                        <div class="fallback-stories-grid">\n                            ${this.stories.map(t=>`\n                                <div class="fallback-story-card">\n                                    <div class="company-info">\n                                        <img src="${t.logo}" alt="${t.company} logo" class="company-logo" onerror="this.style.display='none'">\n                                        <div class="company-details">\n                                            <h4>${t.company}</h4>\n                                            <p>${t.industry}</p>\n                                        </div>\n                                    </div>\n                                    <blockquote>"${t.quote}"</blockquote>\n                                    <p><strong>${t.author}</strong> - ${t.role}</p>\n                                </div>\n                            `).join("")}\n                        </div>\n                    </div>\n                `:this.container.innerHTML='\n                    <div class="success-stories-fallback">\n                        <h3>Success Stories</h3>\n                        <p>Our customers are achieving remarkable results with Elemento. Check back soon for detailed case studies.</p>\n                    </div>\n                ')}}document.addEventListener("DOMContentLoaded",function(){console.log("üåê DOM loaded, looking for carousel container...");document.getElementById("success-stories-carousel")?(console.log("üéØ Found carousel container, initializing..."),new SuccessStoriesCarousel("success-stories-carousel","CMS/success-stories.json")):console.error("‚ùå Carousel container not found!")});